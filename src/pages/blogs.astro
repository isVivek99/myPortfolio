---
import "../../base.css";
import BlogCard from "../components/blogs/BlogCard.astro";
import BaseLayout from "../layout/BaseLayout.astro";
import type { BlogPost } from "../types/blogs/BlogPost.ts";

const response = await fetch("https://gql.hashnode.com/", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
    query GetUserPublications($username: String!, $first: Int!) {
  user(username: $username) {
    publications(first: $first) {
      edges {
        node {
          posts(first: $first) {
            edges {
              node {
                author {
                  username
                  id
                  name
                }
                title
                subtitle
                slug
                canonicalUrl
                readTimeInMinutes
                publishedAt
                coverImage {
                  url
                  attribution
                  photographer
                }
                author {
                  id
                }
              }
            }
            totalDocuments
          }
        }
      }
    }
  }
} 
      `,
    variables: {
      username: "vivek181",
      first: 3,
    },
  }),
});

const json = await response.json();
const data = json.data;
---

<BaseLayout pageTitle="viveks portfolio blog">
  <section
    class="flex flex-col items-center justify-center px-8 pb-20 pt-40 text-center md:h-1/2 md:pb-0 md:pt-20 2xl:px-32"
  >
    <h1 class="text-5xl font-semibold leading-tight tracking-tight">My blog</h1>
    <p class="mt-7 max-w-2xl text-lg font-medium leading-relaxed">
      I like to write about software development ðŸš€ & open source ðŸ¥‘.
    </p>
  </section>
  <section class="relative mt-8 grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {
      data.user.publications.edges[1].node.posts.edges.map((blog: BlogPost) => (
        <BlogCard
          cardTitle={blog.node.title}
          cardSubtitle={blog.node.subtitle}
          dateTime={blog.node.publishedAt}
          imageUrl={blog.node.coverImage?.url}
          readTimeInMinutes={blog.node.readTimeInMinutes}
        />
      ))
    }
  </section>
  <section class="h-32" aria-hidden="true"></section>
</BaseLayout>
