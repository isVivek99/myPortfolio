---
import "../../../../base.css";
import BaseLayout from "../../../layout/BaseLayout.astro";
import BlogCard from "../../../components/blogs/BlogCard.astro";
import Tags from "../../../components/Tags.astro";
import { getSortedBlogs } from "../../../utils/contentCollecion";
import { generateTagSEO } from "../../../utils/seoConfigs";
import type {
  BlogCollection,
  FilteredPostsProps,
} from "../../../types/postsData";
export const prerender = true;

/// This function is called at build time
///runs on the server
/// and generates the static paths for the dynamic route
/// for each tag
/// and returns the paths to be pre-rendered
/// for each tag
/// and passes the filtered posts as props
export async function getStaticPaths() {
  const extractTags = (posts: BlogCollection): string[] => {
    return [...new Set(posts.flatMap((post) => post.data.tags))];
  };

  const filterPostsByTag = (posts: BlogCollection, tag: string) => {
    const returnedPosts = posts.filter((post) => post.data.tags.includes(tag));
    console.log({ returnedPosts });
    return posts.filter((post) => post.data.tags.includes(tag));
  };

  const posts = await getSortedBlogs();
  const tags = extractTags(posts);

  return tags.map((tag) => {
    // Filter posts that have the current tag
    const filteredPosts = filterPostsByTag(posts, tag);

    return {
      params: { slug: tag },
      props: { filteredPosts }, // Pass the filtered posts as props
    };
  });
}

// this runs on the client
const { slug } = Astro.params;
const { filteredPosts } = Astro.props as FilteredPostsProps;

// Generate SEO configuration for this tag page
const tagSEO = generateTagSEO(slug as string, filteredPosts.length);
---

<BaseLayout seo={tagSEO}>
  <section
    class="section-1 flex flex-col items-center justify-center px-8 pb-20 pt-40 text-center md:h-1/2 md:pb-0 md:pt-20 2xl:px-32"
  >
    <h1 class="text-5xl font-semibold leading-tight tracking-tight">My blog</h1>
    <p class="mt-7 max-w-2xl text-lg font-medium leading-relaxed">
      I like to write about software development ðŸš€ & open source ðŸ¥‘.
    </p>
  </section>
  <aside
    class="mb-4 flex w-full justify-start pt-16 sm:px-8 md:px-4 md:pt-0 lg:px-4"
  >
    <Tags selectedTag={slug} />
  </aside>
  <section class="relative mt-8 grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {
      filteredPosts.map((blog) => (
        <BlogCard
          cardTitle={blog.data.title}
          cardSubtitle={blog.data.subheading}
          dateTime={blog.data.publishedAt}
          imageUrl={blog.data.cover}
          readTimeInMinutes={blog.data.readingTimeInMins}
          postUrl={blog.slug}
        />
      ))
    }
  </section>
  <section class="h-32" aria-hidden="true"></section>
</BaseLayout>
